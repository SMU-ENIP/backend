# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Grant execute permisson for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build
      - name: Docker Login
        run:
          echo ${{ secrets.PASSWORD }} | docker login --username ${{ secrets.USERNAME }} --password-stdin

      - name: Build Docker images
        run:
          docker build --platform amd64 --build-arg DEPENDENCY=build/dependency -t express-cicd .
      - name: set tag Docker images
        run:
          docker tag express-cicd la1av1a/express-cicd:${GITHUB_SHA::7}
      - name: Push Docker images
        run:
          docker push la1av1a/express-cicd:${GITHUB_SHA::7}
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.AWS_URL }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            docker stop server
            docker rm express-cicd
            docker rmi la1av1a/express-cicd:${GITHUB_SHA::7}
            docker pull la1av1a/express-cicd:${GITHUB_SHA::7}
            docker tag la1av1a/express-cicd:${GITHUB_SHA::7} express-cicd
            docker run -d  --rm -v /home/ec2-user/pinpoint-agent-2.5.1:/pinpoint-agent-2.5.1 -v /etc/config/application-database.yml:/etc/config/application-database.yml -v /etc/config/application-amazon.yml:/etc/config/application-amazon.yml -v /etc/config/application-naver.yml:/etc/config/application-naver.yml -v /etc/config/pk-APKA5SBL6IKZWKYOKC5N.pem:/etc/config/pk-APKA5SBL6IKZWKYOKC5N.pem --name server -p 8080:8080 express-cicd
